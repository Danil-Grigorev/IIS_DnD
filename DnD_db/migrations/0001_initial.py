# Generated by Django 2.1.2 on 2018-10-21 12:39

import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('difficulty', models.IntegerField()),
                ('purpose', models.TextField()),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth', models.DateField(blank=True, null=True)),
                (
                    'user',
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('adventures', models.ManyToManyField(to='DnD_db.Adventure')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('race', models.CharField(
                    choices=[('HB', 'Hobbit'), ('KU', 'Kuduk'), ('DW', 'Dwarf'), ('EL', 'Elf'), ('HM', 'Human'),
                             ('BA', 'Barbar'), ('KR', 'Kroll')], default='HM', max_length=2)),
                ('speciality', models.CharField(
                    choices=[('WA', 'Warrior'), ('FI', 'Fighter'), ('FE', 'Fencer'), ('RA', 'Ranger'),
                             ('ST', 'Strider'), ('DR', 'Druid'), ('WI', 'Wizard'), ('SO', 'Sorcerer'), ('MA', 'Mage'),
                             ('AL', 'Alchemist'), ('TE', 'Theurg'), ('PY', 'Pyrofor'), ('TH', 'Thief'),
                             ('RO', 'Robber'), ('SI', 'Sicco')], default='WA', max_length=2)),
                ('level', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CharacterDeath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('author', models.ManyToManyField(to='DnD_db.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                               to='DnD_db.Character')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('author', models.ManyToManyField(to='DnD_db.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SessionLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth', models.DateField(blank=True, null=True)),
                (
                    'user',
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='invitation',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.PROTECT,
                                       to='DnD_db.SessionLeader'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='characterdeath',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DnD_db.Map'),
        ),
        migrations.AddField(
            model_name='characterdeath',
            name='to_character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DnD_db.Character'),
        ),
        migrations.AddField(
            model_name='character',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='DnD_db.Player'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='enemies',
            field=models.ManyToManyField(blank=True, to='DnD_db.Enemy'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='map',
            field=models.ManyToManyField(to='DnD_db.Map'),
        ),
    ]
